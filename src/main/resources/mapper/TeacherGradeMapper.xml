<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jw.backdatabasecoursedesign.mapper.TeacherGradeMapper">

    <!--  二级缓存，默认不开启，同一个namespace可以共用  -->
    <cache eviction="LRU" flushInterval="100000" readOnly="true" size="1024"/>

    <insert id="addOrdinaryItem">
            INSERT INTO ordinaryScoreItem(ordinaryScoreId, name, time, proportion)
        <foreach collection="items" item="item" index="index" separator=" UNION DISTINCT ">
            SELECT os.id AS ordinaryScoreId, #{item.name} AS name, #{item.time} AS time, #{item.proportion} AS proportion FROM ordinaryScore AS os
            WHERE os.courseId IN
            (
            SELECT c.id AS courseId FROM course AS c WHERE c.id = #{courseId} AND teacherId = #{id} AND status = 1
            )
        </foreach>
    </insert>

    <delete id="deleteOrdinaryItem">
        DELETE FROM ordinaryScoreItem WHERE id IN
        <foreach collection="list" item="arr" index="index" open="(" separator="," close=")">
            #{arr}
        </foreach>
    </delete>

    <delete id="deleteOrdinaryStudentItem">
        DELETE
        FROM studentOrdinaryScoreItem
        WHERE id IN
        <foreach collection="studentOrdinaryScoreId" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
          AND ordinaryScoreItemId
            IN (
                  SELECT id AS ordinaryScoreItemId
                  FROM ordinaryScoreItem
                  WHERE ordinaryScoreId
                            IN (
                            SELECT id AS ordinaryScoreId
                            FROM course
                            WHERE teacherId = #{id}
                        )
              );
    </delete>

<!--    <select id="teacherUndoExaminationScore" resultType="List">-->
<!--        SELECT studentId,-->
<!--        course.id        AS courseId,-->
<!--        studyMode,-->
<!--        teacherId,-->
<!--        startTime,-->
<!--        endTime,-->
<!--        score,-->
<!--        time,-->
<!--        introduce,-->
<!--        property,-->
<!--        examinationId,-->
<!--        course.name      AS courseName,-->
<!--        proportion,-->
<!--        grade,-->
<!--        studentInfo.name AS studentName,-->
<!--        classNumber-->
<!--        FROM studentCourse-->
<!--        JOIN course ON studentCourse.courseId = course.id-->
<!--        JOIN examination ON examination.id = course.examinationId-->
<!--        JOIN studentInfo ON studentId = studentInfo.number-->
<!--        WHERE (studentId, examinationId) NOT IN (-->
<!--        SELECT studentId, examinationId-->
<!--        FROM studentExamination-->
<!--        )-->
<!--        AND course.status = 1-->
<!--        <if test="courseId != -1">-->
<!--            AND examination.courseId = #{courseId}-->
<!--        </if>-->
<!--        AND teacherId = #{id};-->
<!--    </select>-->

<!--    <select id="teacherUndoStudentOrdinaryScore" resultType="List">-->
<!--        SELECT studentId,-->
<!--               ordinaryScore.courseId       AS courseId,-->
<!--               studyMode,-->
<!--               teacherId,-->
<!--               startTime,-->
<!--               endTime,-->
<!--               score,-->
<!--               introduce,-->
<!--               property,-->
<!--               examinationId,-->
<!--               course.name                  AS courseName,-->
<!--               ordinaryScoreItem.id         AS ordianryScoreItemId,-->
<!--               ordinaryScore.proportion     AS ordinaryScoreProportion,-->
<!--               ordinaryScoreItem.proportion AS ordinaryScoreItemProportion,-->
<!--               ordinaryScoreItem.name       AS ordinaryScoreItemName,-->
<!--               ordinaryScoreItem.time       AS ordinaryScoreItemTime,-->
<!--               studentInfo.name             AS studentName,-->
<!--               classNumber-->
<!--        FROM studentCourse-->
<!--                 JOIN course ON studentCourse.courseId = course.id-->
<!--                 JOIN ordinaryScore ON course.ordinaryScoreId = ordinaryScore.id-->
<!--                 JOIN ordinaryScoreItem ON ordinaryScore.id = ordinaryScoreItem.ordinaryScoreId-->
<!--                 JOIN studentInfo ON studentId = studentInfo.number-->
<!--        WHERE (studentId, ordinaryScoreItem.id) NOT IN (-->
<!--            SELECT studentId, ordinaryScoreItemId-->
<!--            FROM studentOrdinaryScoreItem-->
<!--        )-->
<!--          AND course.status = 1-->
<!--          <if test="courseId != -1">-->
<!--              AND ordinaryScore.courseId = #{courseId}-->
<!--          </if>-->
<!--          AND teacherId = #{id};-->
<!--    </select>-->

<!--    <select id="teacherUndoOrdinaryItemScore" resultType="List">-->
<!--        SELECT ordinaryScoreId,-->
<!--               courseId,-->
<!--               proportion AS ordinaryProportion,-->
<!--               startTime,-->
<!--               endTime,-->
<!--               score,-->
<!--            time,-->
<!--            introduce,-->
<!--            property,-->
<!--            name,-->
<!--            classNumber-->
<!--        FROM ordinaryScore-->
<!--            JOIN course ON course.ordinaryScoreId = ordinaryScore.id-->
<!--        WHERE ordinaryScoreId NOT IN (-->
<!--            SELECT ordinaryScoreItem.ordinaryScoreId-->
<!--            FROM ordinaryScoreItem-->
<!--            )-->
<!--          AND status = 1-->
<!--          AND teacherId = #{id}-->
<!--          AND courseId = #{courseId};-->
<!--    </select>-->

    <select id="selectOrdinaryScoreByTeacher" resultType="com.jw.backdatabasecoursedesign.entity.grade.OrdinaryScoreWithStudentName">
        SELECT year, term, courseName, time, o.name AS typeName, score, studentId, s.name AS studentName, p1 AS proportionInCourse, p2 AS proportionInOrdinary, itemId, studentOrdinaryScoreItemId FROM ordinaryScoreViewWithProportion AS o
            JOIN studentInfo AS s ON o.studentId = s.number
        WHERE courseId = #{courseId}
            AND teacherId = #{teacherId}
            <if test="itemId != -1">
                AND itemId = #{itemId}
            </if>
    </select>

    <delete id="deleteExaminationStudentItem">
        DELETE
        FROM studentExamination
        WHERE id IN
        <foreach collection="studentExaminationScoreId" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
          AND examinationId
            IN (
                  SELECT course.examinationId AS examinationId
                  FROM course
                  WHERE teacherId = #{id}
              );
    </delete>
</mapper>